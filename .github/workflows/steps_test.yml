name: 'Steps Test Workflow'

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'The image tag'
        required: true
        default: '0.1.0'
      image_id:
        description: 'The image ID'
        required: true
        default: 'v-jafklmn'

      dry_run:
        description: 'Run the workflow without executing the steps'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  steps-test:
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 - Echo message
        id: step1
        shell: bash
        run: | 
            echo "This is step 1"
            echo "ecr_image_tag=${{ github.event.inputs.image_tag }}" >> $GITHUB_ENV
            echo "ecr_image_id=${{ github.event.inputs.image_id }}" >> $GITHUB_ENV
            echo "After Step 1 writes:"
            cat $GITHUB_ENV || echo "Nothing yet (expected in same step)"

      - name: Step 2 - Designed to fail
        id: step2
        if: success()
        shell: bash
        run: |
            echo "This is step 2"
            echo "ecr_image_tag from Step 1: ${{ env.ecr_image_tag }}"
            echo "ecr_image_tag=0.1.1" >> $GITHUB_ENV
            echo "ecr_image_id=v-jafklmO" >> $GITHUB_ENV
            echo "After Step 2 write:"
            cat $GITHUB_ENV || echo "Nothing yet (expected in same step)"
            exit 1  # This will cause the step to fail

      - name: Step 3 - Print conclusion
        if: failure() || cancelled()
        shell: bash
        run: |
            echo "dry_run:${{ inputs.dry_run }}"
            echo "Conclusion: Step 1 succeeded and Step 2 failed."
            echo "Step 1 conclusion: ${{ steps.step1.conclusion }}"
            echo "Step 2 conclusion: ${{ steps.step2.conclusion }}"
            if [ -f "$GITHUB_ENV" ]; then
              echo "File exists. Contents:"
              cat $GITHUB_ENV || echo " Cat failed"
              echo "End of GITHUB_ENV contents"
              echo "ecr_image_tag from env: $ecr_image_tag"
              echo "ecr_image_id from env: $ecr_image_id"
            else
              echo "GITHUB_ENV file not found!"
            fi